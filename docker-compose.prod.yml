version: "3.9"

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-05-08T23-50-31Z
  restart: always
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

services:
  api:
    build: 
      context: .
      dockerfile: "./Dockerfile.prod"
    container_name: api
    hostname: api
    depends_on:
      - redis
    ports:
      - "3000:3000"
      - "3001:3001"
      - "3002:3002"
    networks:
      - mizipetsnetwork
    restart: always
  front:
    image: natin56y/mizipets-front
    container_name: front
    pull_policy: always
    depends_on:
      - api
    ports:
      - "4200:80"
    networks:
      - mizipetsnetwork
    restart: always
  postgres_db:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-mizipets:/var/lib/postgresql
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - mizipetsnetwork
   
  loki:
    image: grafana/loki:2.0.0
    hostname: loki
    container_name: loki
    restart: always
    ports:
      - "3100:3100"
    command:
      - --config.file=/mnt/config/loki-config.yaml
    volumes:
      - ./.loki/loki-config.yaml:/mnt/config/loki-config.yaml:ro
    networks:
      - mizipetsnetwork

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    restart: always
    ports:
      - 3030:3000
    volumes: 
      - ./.grafana/provisioning-datasources.yml:/etc/grafana/provisioning/datasources/provisioning-datasources.yml
    networks:
      - mizipetsnetwork

  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2

  nginx:
    image: nginx:1.19.2-alpine
    restart: always
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
  
  redis:
    image: "redis:alpine"
    restart: always
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - mizipetsnetwork

volumes:
  postgres-mizipets:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:

networks:
  mizipetsnetwork:
    driver: bridge